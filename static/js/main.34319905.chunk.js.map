{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAgCeA,MA5Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACnB,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UC8BOC,G,kNA1CZC,MAAQ,CACNC,WAAW,EACXC,OAAS,I,EAGXC,U,sBAAY,8BAAAC,EAAA,sEAEHC,IAAMC,IAAI,4DAFP,gBACWJ,EADX,EACJK,KAAQA,KAAOL,OAEtB,EAAKM,SAAU,CAAEN,SAAQD,WAAY,IAH1B,2C,kEAOXQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACpB,OAAO,6BAASX,UAAU,aACxBU,EACF,yBAAKV,UAAU,UACf,0BAAMA,UAAU,gBAAhB,eAEE,yBAAKA,UAAU,UACnBW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACEb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GAhCCuB,IAAMC,YCDzBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,a","file":"static/js/main.34319905.chunk.js","sourcesContent":["import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"moive__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n        </div>\r\n    )}\r\n\r\nMovie.propTypes = {\r\n    id: Proptypes.number.isRequired,\r\n    year: Proptypes.number.isRequired,\r\n    title: Proptypes.string.isRequired,\r\n    summary: Proptypes.string.isRequired,\r\n    poster: Proptypes.string.isRequired,\r\n    genres: Proptypes.arrayOf(Proptypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\";\n\n class App extends React.Component{\n   state = {\n     isLoading: true,\n     movies : []\n   };\n\n   getMovies = async() => {\n    const {data :{ data: {movies}}} \n    = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState( { movies, isLoading : false })\n  };\n\n   componentDidMount(){\n    this.getMovies();\n   }\n\n   render(){\n    const { isLoading, movies } = this.state;\n   return <section className=\"container\">\n    {isLoading ? (\n   <div className=\"loader\">\n   <span className=\"loader__text\">Loading...</span>\n </div>\n) : (<div className=\"movies\">\n{movies.map(movie => (\n  <Movie\n    key={movie.id}\n    id={movie.id}\n    year={movie.year}\n    title={movie.title}\n    summary={movie.summary}\n    poster={movie.medium_cover_image}\n    genres={movie.genres}\n  />\n))}\n</div>\n)}\n</section>\n      \n   }\n   }\n   \n\nexport default App;\n\n// state 안에는 바꾸고 싶은 데이터를 넣는다\n// setState를 호출하면 react는 새로운 state 와 함께 render function도 다시 호출함 \n/* current 를 통해 this.state.count 대신 {count :current.count +1}\n로 간단히 바꿀 수 있음\n\nrender ->mount -> didupdate -> unmount\nmap 메서드는 배열의 모든 원소에 효과 추가\n\n*/\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('potato')\n);\n\n "],"sourceRoot":""}